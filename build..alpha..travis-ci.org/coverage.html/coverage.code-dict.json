{"/home/travis/build/npmtest/node-npmtest-doiuse/test.js":"/* istanbul instrument in package npmtest_doiuse */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-doiuse/lib.npmtest_doiuse.js":"/* istanbul instrument in package npmtest_doiuse */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_doiuse = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_doiuse = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-doiuse/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-doiuse && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_doiuse */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_doiuse\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_doiuse.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_doiuse.rollup.js'] =\n            local.assetsDict['/assets.npmtest_doiuse.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_doiuse.__dirname + '/lib.npmtest_doiuse.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-doiuse/node_modules/doiuse/lib/doiuse.js":"'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\nvar _ = require('lodash');\nvar missingSupport = require('./missing-support');\nvar Detector = require('./detect-feature-use');\nvar Multimatch = require('multimatch');\n\nfunction browserslist() {\n  var dirs = path.resolve('.').split(path.sep);\n  var config;\n  var content;\n\n  while (dirs.length) {\n    config = dirs.concat(['browserslist']).join(path.sep);\n\n    if (fs.existsSync(config) && fs.statSync(config).isFile()) {\n      content = fs.readFileSync(config, { encoding: 'utf8' });\n\n      return content.split(/\\r?\\n/).join(', ');\n    }\n\n    dirs = dirs.slice(0, -1);\n  }\n}\n\nfunction doiuse(options) {\n  var browserQuery = options.browsers;\n  var onFeatureUsage = options.onFeatureUsage;\n  var ignoreOptions = options.ignore;\n  var ignoreFiles = options.ignoreFiles;\n\n  if (!browserQuery) {\n    browserQuery = browserslist();\n\n    if (!browserQuery) {\n      browserQuery = doiuse['default'].slice();\n    }\n  }\n\n  var _missingSupport = missingSupport(browserQuery);\n\n  var browsers = _missingSupport.browsers;\n  var features = _missingSupport.features;\n\n  var detector = new Detector(_.keys(features));\n\n  return {\n    info: function info() {\n      return {\n        browsers: browsers,\n        features: features\n      };\n    },\n\n    postcss: function postcss(css, result) {\n      return detector.process(css, function (_ref) {\n        var feature = _ref.feature;\n        var usage = _ref.usage;\n        var ignore = _ref.ignore;\n\n        if (ignore && ignore.indexOf(feature) !== -1) {\n          return;\n        }\n        if (ignoreOptions && ignoreOptions.indexOf(feature) !== -1) {\n          return;\n        }\n\n        if (ignoreFiles && Multimatch(usage.source.input.from, ignoreFiles).length > 0) {\n          return;\n        }\n\n        var messages = [];\n        if (features[feature].missing) {\n          messages.push('not supported by: ' + features[feature].missing);\n        }\n        if (features[feature].partial) {\n          messages.push('only partially supported by: ' + features[feature].partial);\n        }\n\n        var message = features[feature].title + ' ' + messages.join(' and ') + ' (' + feature + ')';\n\n        result.warn(message, { node: usage, plugin: 'doiuse' });\n\n        if (onFeatureUsage) {\n          var loc = usage.source;\n          loc.original = css.source.input.map ? {\n            start: css.source.input.map.consumer().originalPositionFor(loc.start),\n            end: css.source.input.map.consumer().originalPositionFor(loc.end)\n          } : {\n            start: loc.start,\n            end: loc.end\n          };\n\n          message = (loc.original.start.source || loc.input.file || loc.input.from) + ':' + loc.original.start.line + ':' + loc.original.start.column + ': ' + message;\n\n          onFeatureUsage({\n            feature: feature,\n            featureData: features[feature],\n            usage: usage,\n            message: message\n          });\n        }\n      });\n    }\n  };\n}\ndoiuse['default'] = ['> 1%', 'last 2 versions', 'Firefox ESR', 'Opera 12.1'];\nmodule.exports = doiuse;","/home/travis/build/npmtest/node-npmtest-doiuse/node_modules/doiuse/lib/missing-support.js":"'use strict';\n\nvar features = require('../data/features');\nvar BrowserSelection = require('./browsers');\nvar _ = require('lodash');\nvar formatBrowserName = require('./util').formatBrowserName;\n\nvar caniuse = require('caniuse-db/fulldata-json/data-1.0.json');\n\nfunction filterStats(browsers, stats) {\n  return _.reduce(stats, function (resultStats, versionData, browser) {\n    // filter only versions of selected browsers that don't fully support this feature\n    var feature = _.reduce(versionData, function (result, support, ver) {\n      var selected = browsers.test(browser, ver);\n      if (selected) {\n        // check if browser is NOT fully (i.e., don't have 'y' in their stats) supported\n        if (!/(^|\\s)y($|\\s)/.test(support)) {\n          // when it's not partially supported ('a'), it's missing\n          var testprop = /(^|\\s)a($|\\s)/.test(support) ? 'partial' : 'missing';\n          if (!result[testprop]) {\n            result[testprop] = {};\n          }\n          result[testprop][selected[1]] = support;\n        }\n      }\n      return result;\n    }, { missing: {}, partial: {} });\n\n    if (_.keys(feature.missing).length !== 0) {\n      resultStats.missing[browser] = feature.missing;\n    }\n    if (_.keys(feature.partial).length !== 0) {\n      resultStats.partial[browser] = feature.partial;\n    }\n    return resultStats;\n  }, { missing: {}, partial: {} });\n}\nfunction lackingBrowsers(browserStats) {\n  return _.reduce(browserStats, function (res, versions, browser) {\n    res.push(formatBrowserName(browser, _.keys(versions)));\n    return res;\n  }, []).join(', ');\n}\n\n/**\n * Get data on CSS features not supported by the given autoprefixer-like\n * browser selection.\n *\n * @returns `{browsers, features}`, where `features` is an array of:\n * ```\n * {\n *   'feature-name': {\n *     title: 'Title of feature'\n *     missing: \"IE (8), Chrome (31)\"\n *     missingData: {\n *       // map of browser -> version -> (lack of)support code\n *       ie: { '8': 'n' },\n *       chrome: { '31': 'n' }\n *     }\n *     partialData: {\n *       // map of browser -> version -> (partial)support code\n *       ie: { '7': 'a' },\n *       ff: { '29': 'a #1' }\n *     }\n *     caniuseData: {\n *       // caniuse-db json data for this feature\n *     }\n *   },\n *   'feature-name-2': {} // etc.\n * }\n * ```\n *\n * `feature-name` is a caniuse-db slug.\n */\nfunction missing(browserRequest) {\n  var browsers = new BrowserSelection(browserRequest);\n  var result = {};\n\n  Object.keys(features).forEach(function (feature) {\n    var featureData = caniuse.data[feature];\n    var lackData = filterStats(browsers, featureData.stats);\n    var missingData = lackData.missing;\n    var partialData = lackData.partial;\n    // browsers with missing or partial support for this feature\n    var missing = lackingBrowsers(missingData);\n    var partial = lackingBrowsers(partialData);\n\n    if (missing.length > 0 || partial.length > 0) {\n      result[feature] = {\n        title: featureData.title,\n        caniuseData: featureData\n      };\n      if (missing.length > 0) {\n        result[feature].missingData = missingData;\n        result[feature].missing = missing;\n      }\n      if (partial.length > 0) {\n        result[feature].partialData = partialData;\n        result[feature].partial = partial;\n      }\n    }\n  });\n\n  return {\n    browsers: browsers.list(),\n    features: result\n  };\n}\n\nmodule.exports = missing;","/home/travis/build/npmtest/node-npmtest-doiuse/node_modules/doiuse/data/features.js":"var list = require('postcss/lib/list')\nvar pats = {\n  attrcc: '[^\\\\~|^$*\\\\]]*',\n  brackets: /(\\[[^\\]]*\\]|\\([^\\)]*\\))/.source,\n  nobrackets: /[^\\[\\]\\(\\)]/.source\n}\nfunction matchOutsideOfBrackets (pat) {\n  if (pat instanceof RegExp) {\n    pat = pat.source\n  }\n  return new RegExp('^(' + pats.brackets + '?' + pats.nobrackets + '*)*' + pat)\n}\n\nmodule.exports = {\n  'border-radius': {\n    properties: [\n      'border-radius',\n      'border-top-left-radius',\n      'border-top-right-radius',\n      'border-bottom-right-radius',\n      'border-bottom-left-radius'\n    ]\n  },\n  'css-boxshadow': { properties: ['box-shadow'] },\n  'css-animation': {\n    properties: [\n      'animation',\n      'animation-name',\n      'animation-duration',\n      'animation-delay',\n      'animation-direction',\n      'animation-fill-mode',\n      'animation-iteration-count',\n      'animation-play-state',\n      'animation-timing-function',\n      '@keyframes'\n    ]\n  },\n  'css-transitions': {\n    properties: [\n      'transition',\n      'transition-property',\n      'transition-duration',\n      'transition-delay',\n      'transition-timing-function'\n    ]\n  },\n  transforms2d: {\n    properties: [\n      'transform',\n      'transform-origin'\n    ]\n  },\n  transforms3d: {\n    properties: [\n      'perspective',\n      'perspective-origin',\n      'transform-style',\n      'backface-visibility'\n    ]\n  },\n  'css-gradients': {\n    properties: [\n      'background',\n      'background-image',\n      'border-image'\n    ],\n    values: [\n      /(^|[^-])linear-gradient/,\n      /(^|[^-])radial-gradient/\n    ]\n  },\n  'css3-boxsizing': { properties: ['box-sizing'] },\n  'css-filters': { properties: ['filter'] },\n  multicolumn: {\n    properties: [\n      'columns',\n      'column-width',\n      'column-gap',\n      'column-rule',\n      'column-rule-color',\n      'column-rule-width',\n      'column-count',\n      'column-rule-style',\n      'column-span',\n      'column-fill',\n      'break-before',\n      'break-after',\n      'break-inside'\n    ]\n  },\n  'user-select-none': { properties: ['user-select'] },\n  flexbox: {\n    properties: ['display'],\n    values: [\n      'display-flex',\n      'inline-flex',\n      'flex',\n      'flex-grow',\n      'flex-shrink',\n      'flex-basis',\n      'flex-direction',\n      'flex-wrap',\n      'flex-flow',\n      'justify-content',\n      'order',\n      'align-items',\n      'align-self',\n      'align-content'\n    ]\n  },\n  calc: {\n    values: ['calc'],\n    properties: ['']\n  },\n  'background-img-opts': {\n    properties: [\n      'background-clip',\n      'background-origin',\n      'background-size'\n    ]\n  },\n  'font-feature': {\n    properties: [\n      'font-feature-settings',\n      'font-variant-ligatures',\n      'font-language-override',\n      'font-kerning'\n    ]\n  },\n  'border-image': { properties: ['border-image'] },\n  'css-selection': {\n    properties: ['::selection'],\n    selector: true\n  },\n  'css-placeholder': {\n    properties: ['::placeholder'],\n    selector: true\n  },\n  'css-hyphens': { properties: ['hyphens'] },\n  fullscreen: {\n    properties: [':fullscreen'],\n    selector: true\n  },\n  'css3-tabsize': { properties: ['tab-size'] },\n  'intrinsic-width': {\n    properties: [\n      'width',\n      'min-width',\n      'max-width',\n      'height',\n      'min-height',\n      'max-height'\n    ],\n    values: [\n      'max-content',\n      'min-content',\n      'fit-content',\n      'fill-available'\n    ]\n  },\n  'css3-cursors-newer': {\n    properties: ['cursor'],\n    values: [\n      'zoom-in',\n      'zoom-out',\n      'grab',\n      'grabbing'\n    ]\n  },\n  'css-sticky': {\n    properties: ['position'],\n    values: ['sticky']\n  },\n  pointer: { properties: ['touch-action'] },\n  'text-decoration': {\n    properties: [\n      'text-decoration-style',\n      'text-decoration-line',\n      'text-decoration-color'\n    ]\n  },\n  'text-size-adjust': { properties: ['text-size-adjust'] },\n  'css-masks': {\n    properties: [\n      'clip-path',\n      'mask',\n      'mask-clip',\n      'mask-composite',\n      'mask-image',\n      'mask-origin',\n      'mask-position',\n      'mask-repeat',\n      'mask-size'\n    ]\n  },\n  fontface: { atrules: ['font-face'] },\n  multibackgrounds: {\n    properties: [/^background-?/],\n    values: [function (value) {\n      return list.comma(value).length > 1\n    }]\n  },\n  'css-table': {\n    properties: ['display'],\n    values: [\n      'table',\n      'table-cell',\n      'table-row',\n      'table-layout'\n    ]\n  },\n  'css-gencontent': {\n    selectors: [\n      ':before',\n      ':after'\n    ]\n  },\n  'css-fixed': {\n    properties: ['position'],\n    values: ['fixed']\n  },\n  'css-sel2': {\n    selectors: [\n      matchOutsideOfBrackets(/\\*/),\n      matchOutsideOfBrackets(/>/),\n      matchOutsideOfBrackets(/\\+/),\n      matchOutsideOfBrackets(/\\./),\n      matchOutsideOfBrackets(/#/),\n      ':first-child',\n      ':link',\n      ':visited',\n      ':active',\n      ':hover',\n      ':focus',\n      ':lang',\n      new RegExp('\\\\[' + pats.attrcc + '\\\\]'),\n      new RegExp('\\\\[' + pats.attrcc + '=' + pats.attrcc + '\\\\]'),\n      new RegExp('\\\\[' + pats.attrcc + '\\\\~=' + pats.attrcc + '\\\\]'),\n      new RegExp('\\\\[' + pats.attrcc + '\\\\|=' + pats.attrcc + '\\\\]')\n    ]\n  },\n  'css-sel3': {\n    selectors: [\n      new RegExp('\\\\[' + pats.attrcc + '\\\\^=' + pats.attrcc + '\\\\]'),\n      new RegExp('\\\\[' + pats.attrcc + '\\\\$=' + pats.attrcc + '\\\\]'),\n      new RegExp('\\\\[' + pats.attrcc + '\\\\*=' + pats.attrcc + '\\\\]'),\n      ':root',\n      ':nth-child',\n      ':nth-last-child',\n      'nth-of-type',\n      'nth-last-of-type',\n      ':last-child',\n      ':first-of-type',\n      ':last-of-type',\n      ':only-child',\n      ':only-of-type',\n      ':empty',\n      ':target',\n      ':enabled',\n      ':disabled',\n      ':checked',\n      ':not',\n      /^[^\\[]*~/\n    ]\n  },\n  'css-textshadow': { properties: ['text-shadow'] },\n  'css3-colors': {\n    properties: [''],\n    values: [\n      'rgba',\n      'hsl',\n      'hsla'\n    ]\n  },\n  'css-mediaqueries': { atrules: ['media'] },\n  'css-canvas': {\n    properties: [/^background/],\n    values: [/^-webkit-canvas/]\n  },\n  'css-reflections': { properties: ['box-reflect'] },\n  'svg-css': { unimplemented: true },\n  'css-featurequeries': { atrules: ['supports'] },\n  'css-opacity': { properties: ['opacity'] },\n  'text-overflow': { properties: ['text-overflow'] },\n  wordwrap: { properties: ['overflow-wrap'] },\n  'object-fit': { properties: ['object-fit'] },\n  minmaxwh: {\n    properties: [\n      'min-width',\n      'max-width',\n      'min-height',\n      'max-height'\n    ]\n  },\n  'text-stroke': { unimplemented: true },\n  'inline-block': {\n    properties: ['display'],\n    values: ['inline-block']\n  },\n  'css-grid': { unimplemented: true },\n  rem: {\n    properties: [''],\n    values: ['rem']\n  },\n  ttf: { unimplemented: true },\n  'pointer-events': { properties: ['pointer-events'] },\n  'css-regions': { unimplemented: true },\n  'css-counters': {\n    properties: [\n      'counter-reset',\n      'counter-increment'\n    ]\n  },\n  'css-resize': { properties: ['resize'] },\n  'css-repeating-gradients': {\n    properties: [''],\n    values: [\n      'repeating-linear-gradient',\n      'repeating-radial-gradient'\n    ]\n  },\n  'word-break': { properties: ['word-break'] },\n  'viewport-units': {\n    properties: [''],\n    values: [\n      'vw',\n      'vh',\n      'vmin',\n      'vmax'\n    ]\n  },\n  outline: {\n    properties: [\n      'outline',\n      'outline-style',\n      'outline-width',\n      'outline-color'\n    ]\n  },\n  'css3-cursors': {\n    properties: ['cursor'],\n    values: [\n      'none',\n      'context-menu',\n      'cell',\n      'vertical-text',\n      'alias',\n      'copy',\n      'no-drop',\n      'not-allowed',\n      'nesw-resize',\n      'nwse-resize',\n      'col-resize',\n      'row-resize',\n      'all-scroll'\n    ]\n  },\n  'css-variables': { unimplemented: true },\n  'css-backgroundblendmode': { properties: ['background-blend-mode'] },\n  'css-mixblendmode': { properties: ['mix-blend-mode'] },\n  'will-change': { properties: ['will-change'] },\n  'css-shapes': {\n    properties: [\n      'shape-outside',\n      'shape-image-threshold',\n      'shape-margin'\n    ]\n  },\n  'kerning-pairs-ligatures': {\n    properties: ['text-rendering'],\n    values: ['optimizeLegibility']\n  },\n  'css-image-orientation': { properties: ['image-orientation'] },\n  'css-appearance': { properties: ['appearance'] },\n  'css-background-offsets': { unimplemented: true },\n  'css-touch-action': { properties: ['touch-action'] },\n  'css-clip-path': { properties: ['clip-path'] },\n  'font-unicode-range': {\n    atrules: ['font-face'],\n    properties: ['unicode-range']\n  },\n  'css-font-stretch': { properties: ['font-stretch'] },\n  'font-size-adjust': { properties: ['font-size-adjust'] },\n  'css-media-resolution': {\n    atrules: ['media'],\n    params: [\n      'min-resolution',\n      'max-resolution'\n    ]\n  },\n  'css-image-set': {\n    properties: [''],\n    values: ['image-set']\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-doiuse/node_modules/doiuse/lib/browsers.js":"// Generated by CoffeeScript 2.0.0-beta8\n'use strict';\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar browserslist = require('browserslist');\nvar _ = require('lodash');\nmodule.exports = (function () {\n  function BrowserSelection(query) {\n    _classCallCheck(this, BrowserSelection);\n\n    this.browsersRequest = query;\n    this._list = browserslist(this.browsersRequest).map(function (s) {\n      return s.split(' ');\n    });\n  }\n\n  _createClass(BrowserSelection, [{\n    key: 'test',\n    value: function test(browser, version) {\n      version = version.split('-');\n      if (version.length === 1) version.push(version[0]);\n      return _.find(this._list, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2);\n\n        var b = _ref2[0];\n        var v = _ref2[1];\n\n        return b === browser && v >= version[0] && v <= version[1];\n      });\n    }\n  }, {\n    key: 'list',\n    value: function list() {\n      return this._list.slice();\n    }\n  }]);\n\n  return BrowserSelection;\n})();","/home/travis/build/npmtest/node-npmtest-doiuse/node_modules/doiuse/lib/util.js":"'use strict';\n\nvar agents = require('caniuse-db/data.json').agents;\n\nmodule.exports = {\n  formatBrowserName: function formatBrowserName(browserKey, versions) {\n    var browserName = (agents[browserKey] || {}).browser;\n    if (!versions) {\n      return browserName;\n    }\n    return browserName + ' (' + versions.join(',') + ')';\n  }\n};","/home/travis/build/npmtest/node-npmtest-doiuse/node_modules/doiuse/lib/detect-feature-use.js":"'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _ = require('lodash');\nvar features = require('../data/features');\n\nvar PLUGIN_OPTION_COMMENT = 'doiuse-';\nvar DISABLE_FEATURE_COMMENT = PLUGIN_OPTION_COMMENT + 'disable';\nvar ENABLE_FEATURE_COMMENT = PLUGIN_OPTION_COMMENT + 'enable';\n\n/*\n * str: string to search in.\n * searchfor: string or pattern to search for.\n */\nfunction isFoundIn(str) {\n  str = stripUrls(str);\n  return function find(searchfor) {\n    if (searchfor instanceof RegExp) return searchfor.test(str);else if (_.isFunction(searchfor)) return searchfor(str);else return str && str.indexOf(searchfor) >= 0;\n  };\n}\n\n/*\n * Strip the contents of url literals so they aren't matched\n * by our naive substring matching.\n */\nfunction stripUrls(str) {\n  return str.replace(/url\\([^\\)]*\\)/g, 'url()'); // eslint-disable-line no-useless-escape\n}\n\n/**\n * Detect the use of any of a given list of CSS features.\n * ```\n * var detector = new Detector(featureList)\n * detector.process(css, cb)\n * ```\n *\n * `featureList`: an array of feature slugs (see caniuse-db)\n * `cb`: a callback that gets called for each usage of one of the given features,\n * called with an argument like:\n * ```\n * {\n *   usage: {} // postcss node where usage was found\n *   feature: {} // caniuse-db feature slug\n *   ignore: {} // caniuse-db feature to ignore in current file\n * }\n * ```\n */\nmodule.exports = (function () {\n  function Detector(featureList) {\n    _classCallCheck(this, Detector);\n\n    this.features = _.pick(features, featureList);\n    this.ignore = [];\n  }\n\n  _createClass(Detector, [{\n    key: 'decl',\n    value: function decl(_decl, cb) {\n      for (var feat in this.features) {\n        var properties = this.features[feat].properties || [];\n        var values = this.features[feat].values;\n        if (properties.filter(isFoundIn(_decl.prop)).length > 0) {\n          if (!values || values.filter(isFoundIn(_decl.value)).length > 0) {\n            cb({ usage: _decl, feature: feat, ignore: this.ignore });\n          }\n        }\n      }\n    }\n  }, {\n    key: 'rule',\n    value: function rule(_rule, cb) {\n      for (var feat in this.features) {\n        var selectors = this.features[feat].selectors || [];\n        if (selectors.filter(isFoundIn(_rule.selector)).length > 0) {\n          cb({ usage: _rule, feature: feat, ignore: this.ignore });\n        }\n      }\n\n      this.node(_rule, cb);\n    }\n  }, {\n    key: 'atrule',\n    value: function atrule(_atrule, cb) {\n      for (var feat in this.features) {\n        var atrules = this.features[feat].atrules || [];\n        var params = this.features[feat].params;\n        if (atrules.filter(isFoundIn(_atrule.name)).length > 0) {\n          if (!params || params.filter(isFoundIn(_atrule.params)).length > 0) {\n            cb({ usage: _atrule, feature: feat, ignore: this.ignore });\n          }\n        }\n      }\n\n      this.node(_atrule, cb);\n    }\n  }, {\n    key: 'comment',\n    value: function comment(_comment, cb) {\n      var text = _comment.text.toLowerCase();\n\n      if (_.startsWith(text, PLUGIN_OPTION_COMMENT)) {\n        var option = text.split(' ', 1)[0];\n        var value = text.replace(option, '').trim();\n\n        switch (option) {\n          case DISABLE_FEATURE_COMMENT:\n            if (value === '') {\n              this.ignore = _.keysIn(this.features);\n            } else {\n              this.ignore = _.uniq([].concat(_toConsumableArray(this.ignore), _toConsumableArray(value.split(',').map(function (feat) {\n                return feat.trim();\n              }))));\n            }\n            break;\n          case ENABLE_FEATURE_COMMENT:\n            if (value === '') {\n              this.ignore = [];\n            } else {\n              this.ignore = _.without.apply(_, [this.ignore].concat(_toConsumableArray(value.split(',').map(function (feat) {\n                return feat.trim();\n              }))));\n            }\n            break;\n        }\n      }\n    }\n  }, {\n    key: 'node',\n    value: function node(_node, cb) {\n      var _this = this;\n\n      _node.each(function (child) {\n        switch (child.type) {\n          case 'rule':\n            _this.rule(child, cb);\n            break;\n          case 'decl':\n            _this.decl(child, cb);\n            break;\n          case 'atrule':\n            _this.atrule(child, cb);\n            break;\n          case 'comment':\n            _this.comment(child, cb);\n            break;\n          default:\n            throw new Error('Unkonwn node type ' + child.type);\n        }\n      });\n    }\n  }, {\n    key: 'process',\n    value: function process(node, cb) {\n      //  Reset ignoring rules specified by inline comments per each file\n      this.ignore = [];\n\n      //  Recursively walk nodes in file\n      this.node(node, cb);\n    }\n  }]);\n\n  return Detector;\n})();","/home/travis/build/npmtest/node-npmtest-doiuse/node_modules/doiuse/cli.js":"#!/usr/bin/env node\n\nvar FILE_NOT_FOUND = 'ENOENT'\n\nvar fs = require('fs')\nvar ldjson = require('ldjson-stream')\nvar through = require('through2')\nvar browserslist = require('browserslist')\nvar path = require('path')\nvar _ = require('lodash')\n\nvar formatBrowserName = require('./lib/util').formatBrowserName\nvar defaultBrowsers = require('./').default\nvar doiuse = require('./stream')\n\nvar yargs = require('yargs')\n  .usage('Lint your CSS for browser support.')\n  .example('cat FILE | $0 -b \"ios >= 6\"', '')\n  .example('$0 --browsers \"ie >= 9, > 1%, last 3 versions\" [FILE] [FILE] ...', '')\n  .example('$0 -b \"ie >= 8\" -b \"> 1%\" -b \"last 3 versions\" [FILE] [FILE] ...', '')\n  .options('b', {\n    alias: 'browsers',\n    description: 'Autoprefixer-like browser criteria.',\n    default: defaultBrowsers.join(', ')\n  })\n  .string('b')\n  .options('i', {\n    alias: 'ignore',\n    description: 'List of features to ignore.',\n    default: ''\n  })\n  .string('i')\n  .options('l', {\n    alias: 'list-only',\n    description: 'Just show the browsers and features that would be tested by' +\n      'the specified browser criteria, without actually processing any CSS.'\n  })\n  .options('c', {\n    alias: 'config',\n    description: 'Provide options through config file'\n  })\n  .string('verbose')\n  .options('v', {\n    alias: 'verbose',\n    description: 'Verbose output. Multiple levels available.'\n  })\n  .count('verbose')\n  .options('j', {\n    alias: 'json',\n    description: 'Output JSON instead of string linter-like messages.'\n  })\n  .boolean('j')\n  .help('h', 'Show help message.')\n  .alias('h', 'help')\n\nvar argv = yargs.argv\n\n//  Config file reading\nif (argv.config) {\n  try {\n    var fileData = fs.readFileSync(path.resolve(argv.config), 'utf8')\n    var config = JSON.parse(fileData)\n    _.forEach(_.keys(config), function (key) {\n      var value = config[key]\n      if (key === 'browsers') {\n        if (_.isArray(value)) value = value.join(',')\n      }\n\n      argv[key] = value\n    })\n  } catch (err) {\n    if (err.code === FILE_NOT_FOUND) console.error('Config file not found', err)\n    else console.error(err)\n  }\n}\n\nargv.browsers = argv.browsers.split(',').map(function (s) { return s.trim() })\nargv.ignore = argv.ignore.split(',').map(function (s) { return s.trim() })\n// Informational output\nif (argv.l) { argv.v = ++argv.verbose }\nif (argv.verbose >= 1) {\n  var browsers = browserslist(argv.browsers)\n    .map(function (b) {\n      b = b.split(' ')\n      b[0] = formatBrowserName(b[0])\n      b[1] = parseInt(b[1], 10)\n      return b\n    })\n    .sort(function (a, b) { return (a[0] !== b[0]) ? a[0] > b[0] : a[1] > b[1] })\n    .map(function (b) { return b.join(' ') })\n    .join(', ')\n  console.log('[doiuse] Browsers: ' + browsers)\n}\n\nvar out\nif (argv.verbose >= 2) {\n  var features = require('./')(argv.browsers).info().features\n  console.log('\\n[doiuse] Unsupported features:')\n  for (var feat in features) {\n    out = [features[feat].caniuseData.title]\n    if (argv.verbose >= 3) {\n      out.push('\\n', features[feat].missing.join(', '), '\\n')\n    }\n    console.log(out.join(''))\n  }\n}\nif (argv.l) { process.exit() }\n\n// Process the CSS\nif (argv.help || (argv._.length === 0 && process.stdin.isTTY)) {\n  yargs.showHelp()\n  process.exit()\n}\n\nif (argv.json) {\n  out = ldjson.serialize()\n}\nif (!argv.json) {\n  out = through.obj(function (usage, enc, next) {\n    next(null, usage.message + '\\n')\n  })\n}\nout.pipe(process.stdout)\n\nif (argv._.length > 0) {\n  argv._.forEach(function (file) {\n    fs.createReadStream(file)\n    .pipe(doiuse({ browsers: argv.browsers, ignore: argv.ignore }, file))\n    .on('error', function (err) { console.error(err) })\n    .pipe(out)\n  })\n} else {\n  process.stdin\n    .pipe(doiuse({ browsers: argv.browsers, ignore: argv.ignore }))\n    .on('error', function (err) { console.error(err) })\n    .pipe(out)\n}\n","/home/travis/build/npmtest/node-npmtest-doiuse/node_modules/doiuse/stream.js":"var through = require('through2')\nvar duplexer = require('duplexer2')\nvar rules = require('css-rule-stream')\nvar sourcemap = require('source-map')\n\nvar postcss = require('postcss')\nvar doiuse = require('./')\n\nmodule.exports = stream\n\n/**\n * @param {Object} options (browsers, ignore, etc.)\n * @param {string} [filename]  Filename for outputting source code locations.\n */\nfunction stream (options, filename) {\n  var inp = rules()\n  filename = filename || '<streaming css input>'\n\n  var processor\n\n  var out = through.obj(write)\n  var duplex = duplexer(inp, out)\n\n  try {\n    processor = postcss([doiuse({\n      browsers: options.browsers,\n      ignore: options.ignore,\n      onFeatureUsage: pushUsage\n    })])\n\n    inp.pipe(out)\n  } catch (e) {\n    setImmediate(function () { duplex.emit('error', e) })\n  }\n\n  return duplex\n\n  function write (rule, enc, next) {\n    try {\n      var mapper = new sourcemap.SourceMapGenerator()\n\n      var lines = rule.content.split('\\n')\n      var oline = rule.line\n      var ocol = rule.column\n      for (var line = 0; line < lines.length; line++) {\n        mapper.addMapping({\n          generated: { line: line + 1, column: 1 },\n          original: { line: oline, column: ocol },\n          source: filename\n        })\n        mapper.addMapping({\n          generated: { line: line + 1, column: lines[line].length },\n          original: { line: oline, column: ocol + lines[line].length },\n          source: filename\n        })\n        oline++\n        ocol = 1\n      }\n\n      processor.process(rule.content, { map: { prev: mapper.toString() } })\n        .then(function (result) { next() })\n        .catch(handleError)\n    } catch (e) {\n      handleError(e)\n    }\n\n    function handleError (error) {\n      if (options.skipErrors) {\n        duplex.emit('warning', error)\n        next()\n      } else {\n        next(error)\n      }\n    }\n  }\n\n  function pushUsage (usage) {\n    out.push(usage)\n  }\n}\n"}